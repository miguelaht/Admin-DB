--------------------------------------------------------
--  DDL for Table VET_ADDRESS
--------------------------------------------------------

CREATE TABLE "VET_ADDRESS" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"CITY" VARCHAR2(20), 
	"NEIGHBORHOOD" VARCHAR2(20), 
	"STREET" VARCHAR2(20),
    PRIMARY KEY("ID")
);

--------------------------------------------------------
--  DDL for Table VET_ADMINISTRATOR
--------------------------------------------------------

CREATE TABLE VET_ADMINISTRATOR (
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"FIRST_NAME" NVARCHAR2(20), 
	"MIDDLE_NAME" NVARCHAR2(20), 
	"LAST_NAME" NVARCHAR2(20), 
	"TELEPHONE" NVARCHAR2(10), 
	"ADDRESS_ID" NUMBER, 
	"USER_ID" NUMBER
);

--------------------------------------------------------
--  DDL for Table VET_OWNER
--------------------------------------------------------
   
CREATE TABLE VET_OWNER (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"FIRST_NAME" VARCHAR2(20), 
	"MIDDLE_NAME" VARCHAR2(20), 
	"LAST_NAME" VARCHAR2(20), 
	"TELEPHONE" VARCHAR2(10), 
	"ADDRESS_ID" NUMBER,
    PRIMARY KEY ("ID"),
    FOREIGN KEY (ADDRESS_ID) REFERENCES VET_ADDRESS(ID)
);

--------------------------------------------------------
--  DDL for Table VET_MEDIC
--------------------------------------------------------
CREATE TABLE "VET_MEDIC" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"FIRST_NAME" VARCHAR2(20), 
	"MIDDLE_NAME" VARCHAR2(20), 
	"LAST_NAME" VARCHAR2(20), 
	"TELEPHONE" VARCHAR2(10), 
	"EMERGENCIES" NUMBER(1,0), 
	"ADMISSION" DATE, 
	"ADDRESS_ID" NUMBER,
    PRIMARY KEY ("ID"),
    FOREIGN KEY (ADDRESS_ID) REFERENCES VET_ADDRESS(ID)
);

--------------------------------------------------------
--  DDL for Table VET_SURGERY
--------------------------------------------------------
CREATE TABLE "VET_SURGERY" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"DURATION" TIMESTAMP (6), 
	"DESCRIPTION" VARCHAR2(50), 
	"RISK" VARCHAR2(7), 
	"NAME" VARCHAR2(50), 
	"ANESTHESIA" NUMBER(1,0),
    PRIMARY KEY ("ID")
); 

--------------------------------------------------------
--  DDL for Table VET_SPECIES
--------------------------------------------------------
CREATE TABLE "VET_SPECIES"(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    "NAME" VARCHAR2(50),
    "FAMILY" VARCHAR2(50),
    PRIMARY KEY ("ID")
);

--------------------------------------------------------
--  DDL for Table VET_BREED
--------------------------------------------------------
CREATE TABLE "VET_BREED"(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    "NAME" VARCHAR2(50),
    "LOW" NUMBER,
    "HIGH" NUMBER,
    PRIMARY KEY ("ID")
);

--------------------------------------------------------
--  DDL for Table VET_MEDICINE
--------------------------------------------------------
CREATE TABLE "VET_MEDICINE"(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    "NAME" VARCHAR2(50),
    "DOSAGE" VARCHAR2(50),
    "ADMINISTRATION" TIMESTAMP,
    PRIMARY KEY ("ID")
);

--------------------------------------------------------
--  DDL for Table VET_SHIFT
--------------------------------------------------------
CREATE TABLE "VET_SHIFT"(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    "START" TIMESTAMP,
    "END" TIMESTAMP,
    "NAME" VARCHAR2(50),
    PRIMARY KEY ("ID")
);

--------------------------------------------------------
--  DDL for Table VET_OWNER_CELLPHONE
--------------------------------------------------------

CREATE TABLE "VET_OWNER_CELLPHONE" (	
	"CELLPHONE" VARCHAR2(10), 
	"OWNER_ID" NUMBER,
    PRIMARY KEY("CELLPHONE","OWNER_ID"),
    FOREIGN KEY ("OWNER_ID") REFERENCES VET_OWNER("ID")
); 

--------------------------------------------------------
--  DDL for Table VET_MEDIC_CELLPHONE
--------------------------------------------------------

CREATE TABLE "VET_MEDIC_CELLPHONE" (	
	"CELLPHONE" VARCHAR2(10), 
	"MEDIC_ID" NUMBER,
    PRIMARY KEY("CELLPHONE","MEDIC_ID"),
    FOREIGN KEY ("MEDIC_ID") REFERENCES VET_MEDIC("ID")
); 

--------------------------------------------------------
--  DDL for Table VET_PATIENT
--------------------------------------------------------
CREATE TABLE "VET_PATIENT" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"NAME" VARCHAR2(20), 
	"PHOTO" VARCHAR2(100), 
	"DATE_FIRST_ATTENDED" DATE, 
	"BREED_ID" NUMBER, 
	"OWNER_ID" NUMBER, 
	"PRIMARY_CARE_DOCTOR_ID" NUMBER, 
	"SPECIES_ID" NUMBER,
    PRIMARY KEY ("ID"),
    FOREIGN KEY ("BREED_ID") REFERENCES VET_BREED("ID"),
    FOREIGN KEY ("OWNER_ID") REFERENCES VET_OWNER("ID"),
    FOREIGN KEY ("PRIMARY_CARE_DOCTOR_ID") REFERENCES VET_MEDIC("ID"),
    FOREIGN KEY ("SPECIES_ID") REFERENCES VET_SPECIES("ID")
);

--------------------------------------------------------
--  DDL for Table VET_APPOINTMENT
--------------------------------------------------------
CREATE TABLE "VET_APPOINTMENT" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"DATE" TIMESTAMP (6), 
	"DESCRIPTION" VARCHAR2(50), 
	"BOOKED" DATE, 
	"MEDIC_ID" NUMBER, 
	"PATIENT_ID" NUMBER, 
	"SURGERY_ID" NUMBER,
    PRIMARY KEY ("ID"),
    FOREIGN KEY ("MEDIC_ID") REFERENCES VET_MEDIC("ID"),
    FOREIGN KEY ("PATIENT_ID") REFERENCES VET_PATIENT("ID"),
    FOREIGN KEY ("SURGERY_ID") REFERENCES VET_SURGERY("ID")
);

--------------------------------------------------------
--  DDL for Table VET_DISEASE
--------------------------------------------------------

CREATE TABLE "VET_DISEASE" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"NAME" VARCHAR2(20),
    PRIMARY KEY("ID")
);

--------------------------------------------------------
--  DDL for Table VET_DISEASES
--------------------------------------------------------

CREATE TABLE "VET_DISEASES" (
	"BREED_ID" NUMBER, 
	"DISEASE_ID" NUMBER, 
	"MEDICATION_ID" NUMBER,
    PRIMARY KEY ("BREED_ID", "DISEASE_ID", "MEDICATION_ID"),
    FOREIGN KEY("BREED_ID") REFERENCES VET_BREED(ID),
    FOREIGN KEY("DISEASE_ID") REFERENCES VET_DISEASE(ID),
    FOREIGN KEY("MEDICATION_ID") REFERENCES VET_MEDICINE(ID)
);

--------------------------------------------------------
--  DDL for Table VET_WORKINGSHIFT
--------------------------------------------------------
CREATE TABLE VET_WORKINGSHIFT(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"DATE" DATE, 
	"MEDIC_ID" NUMBER, 
	"SHIFT_ID" NUMBER,
    PRIMARY KEY("ID"),
    FOREIGN KEY ("MEDIC_ID") REFERENCES VET_MEDIC(ID),
    FOREIGN KEY ("SHIFT_ID") REFERENCES VET_SHIFT(ID)
);

--------------------------------------------------------
--  DDL for Table VET_AUDIT
--------------------------------------------------------

CREATE TABLE "VET_AUDIT" (	
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY ,
	"DATE" DATE, 
	"TABLE" VARCHAR2(20), 
	"OP" CHAR(1), 
	"USER" VARCHAR2(15),
    PRIMARY KEY("ID")
);
--------------------------------------------------------
--  Stored Procedures for Table VET_ADDRESS
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_ADDRESS(
	vCITY IN VET_ADDRESS.CITY%TYPE,
    vNEIGHBORHOOD IN VET_ADDRESS.NEIGHBORHOOD%TYPE,
    vSTREET IN VET_ADDRESS.STREET%TYPE)
IS
BEGIN
  INSERT INTO VET_ADDRESS ("CITY", "NEIGHBORHOOD", "STREET")
  VALUES (vCITY, vNEIGHBORHOOD, vSTREET);
  COMMIT;
END;


CREATE OR REPLACE PROCEDURE UPDATE_ADDRESS(
    vID IN VET_ADDRESS.ID%TYPE,
    vCITY IN VET_ADDRESS.CITY%TYPE,
    vNEIGHBORHOOD IN VET_ADDRESS.NEIGHBORHOOD%TYPE,
    vSTREET IN VET_ADDRESS.STREET%TYPE)
IS
BEGIN
    UPDATE VET_ADDRESS SET CITY=vCITY, NEIGHBORHOOD=vNEIGHBORHOOD, STREET=vSTREET WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_ADDRESS(
    vID IN VET_ADDRESS.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_ADDRESS WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_OWNER
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_OWNER(
    vFIRST_NAME IN VET_OWNER.FIRST_NAME%TYPE,
    vMIDDLE_NAME IN VET_OWNER.MIDDLE_NAME%TYPE,
    vLAST_NAME IN VET_OWNER.LAST_NAME%TYPE,
    vTELEPHONE IN VET_OWNER.TELEPHONE%TYPE,
    vADDRESS_ID IN VET_OWNER.ADDRESS_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_OWNER ("FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "TELEPHONE" , "ADDRESS_ID")
  VALUES (vFIRST_NAME, vMIDDLE_NAME, vLAST_NAME, vTELEPHONE, vADDRESS_ID);
  COMMIT;
END;


CREATE OR REPLACE PROCEDURE UPDATE_OWNER(
    vID IN VET_OWNER.ID%TYPE,
    vFIRST_NAME IN VET_OWNER.FIRST_NAME%TYPE,
    vMIDDLE_NAME IN VET_OWNER.MIDDLE_NAME%TYPE,
    vLAST_NAME IN VET_OWNER.LAST_NAME%TYPE,
    vTELEPHONE IN VET_OWNER.TELEPHONE%TYPE,
    vADDRESS_ID IN VET_OWNER.ADDRESS_ID%TYPE)
IS
BEGIN
    UPDATE VET_OWNER SET FIRST_NAME=vFIRST_NAME , MIDDLE_NAME=vMIDDLE_NAME , 
    LAST_NAME=vLAST_NAME  , TELEPHONE=vTELEPHONE , ADDRESS_ID=vADDRESS_ID WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_OWNER(
    vID IN VET_OWNER.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_OWNER WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_MEDIC
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_MEDIC(
    vFIRST_NAME IN VET_OWNER.FIRST_NAME%TYPE,
    vMIDDLE_NAME IN VET_OWNER.MIDDLE_NAME%TYPE,
    vLAST_NAME IN VET_OWNER.LAST_NAME%TYPE,
    vTELEPHONE IN VET_OWNER.TELEPHONE%TYPE,
    vEMERGENCIES IN VET_MEDIC.EMERGENCIES%TYPE,
    vADMISSION IN VET_MEDIC.ADMISSION%TYPE,
    vADDRESS_ID IN VET_OWNER.ADDRESS_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_MEDIC 
  ("FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "TELEPHONE","EMERGENCIES","ADMISSION", "ADDRESS_ID")
  VALUES (vFIRST_NAME, vMIDDLE_NAME, vLAST_NAME, vTELEPHONE, vEMERGENCIES, vADMISSION, vADDRESS_ID);
  COMMIT;
END;


CREATE OR REPLACE PROCEDURE UPDATE_MEDIC(
    vID IN VET_OWNER.ID%TYPE,
    vFIRST_NAME IN VET_OWNER.FIRST_NAME%TYPE,
    vMIDDLE_NAME IN VET_OWNER.MIDDLE_NAME%TYPE,
    vLAST_NAME IN VET_OWNER.LAST_NAME%TYPE,
    vTELEPHONE IN VET_OWNER.TELEPHONE%TYPE,
    vEMERGENCIES IN VET_MEDIC.EMERGENCIES%TYPE,
    vADMISSION IN VET_MEDIC.ADMISSION%TYPE,
    vADDRESS_ID IN VET_OWNER.ADDRESS_ID%TYPE)
IS
BEGIN
    UPDATE VET_MEDIC SET FIRST_NAME=vFIRST_NAME , MIDDLE_NAME=vMIDDLE_NAME , 
    LAST_NAME=vLAST_NAME  , TELEPHONE=vTELEPHONE ,EMERGENCIES=vEMERGENCIES,
    ADMISSION=vADMISSION, ADDRESS_ID=vADDRESS_ID WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_MEDIC(
    vID IN VET_MEDIC.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_MEDIC WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_SURGERY
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_SURGERY(
    vDURATION IN VET_SURGERY.DURATION%TYPE,
    vDESCRIPTION IN VET_SURGERY.DESCRIPTION%TYPE,
    vRISK IN VET_SURGERY.RISK%TYPE,
    vNAME IN VET_SURGERY."NAME"%TYPE,
    vANESTHESIA IN VET_SURGERY.ANESTHESIA%TYPE)
IS
BEGIN
  INSERT INTO VET_SURGERY ("DURATION", "DESCRIPTION", "RISK", "NAME", "ANESTHESIA")
  VALUES (vDURATION, vDESCRIPTION, vRISK, vNAME, vANESTHESIA);
  COMMIT;
END;


CREATE OR REPLACE PROCEDURE UPDATE_SURGERY(
    vID IN VET_SURGERY.ID%TYPE,
    vDURATION IN VET_SURGERY.DURATION%TYPE,
    vDESCRIPTION IN VET_SURGERY.DESCRIPTION%TYPE,
    vRISK IN VET_SURGERY.RISK%TYPE,
    vNAME IN VET_SURGERY."NAME"%TYPE,
    vANESTHESIA IN VET_SURGERY.ANESTHESIA%TYPE)
IS
BEGIN
    UPDATE VET_SURGERY SET DURATION=vDURATION, DESCRIPTION=vDESCRIPTION,
    RISK=vRISK, "NAME"=vNAME, ANESTHESIA=vANESTHESIA
    WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_SURGERY(
    vID IN VET_SURGERY.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_SURGERY WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_SPECIES
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_SPECIES(
	vNAME IN VET_SPECIES."NAME"%TYPE,
    vFAMILY IN VET_SPECIES.FAMILY%TYPE)
IS
BEGIN
  INSERT INTO VET_SPECIES ("NAME", "FAMILY")
  VALUES (vNAME, vFAMILY);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_SPECIES(
    vID IN VET_SPECIES.ID%TYPE,
    vNAME IN VET_SPECIES."NAME"%TYPE,
    vFAMILY IN VET_SPECIES.FAMILY%TYPE)
IS
BEGIN
    UPDATE VET_SPECIES SET "NAME"=vNAME, FAMILY=vFAMILY WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_SPECIES(
    vID IN VET_SPECIES.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_SPECIES WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_BREED
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_BREED(
	vNAME IN VET_BREED."NAME"%TYPE,
    vLOW IN VET_BREED.LOW%TYPE,
    vHIGH IN VET_BREED.HIGH%TYPE)
IS
BEGIN
  INSERT INTO VET_BREED ("NAME", "LOW", "HIGH")
  VALUES (vNAME, vLOW, vHIGH);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_BREED(
    vID IN VET_BREED.ID%TYPE,
    vNAME IN VET_BREED."NAME"%TYPE,
    vLOW IN VET_BREED.LOW%TYPE,
    vHIGH IN VET_BREED.HIGH%TYPE)
IS
BEGIN
    UPDATE VET_BREED SET "NAME"=vNAME, LOW=vLOW, HIGH=vHIGH WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_BREED(
    vID IN VET_BREED.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_BREED WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_SHIFT
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_SHIFT(
	vSTART IN VET_SHIFT."START"%TYPE,
    vEND IN VET_SHIFT."END"%TYPE,
    vNAME IN VET_SHIFT."NAME"%TYPE)
IS
BEGIN
  INSERT INTO VET_SHIFT ("START", "END", "NAME")
  VALUES (vSTART, vEND, vNAME);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_SHIFT(
    vID IN VET_SHIFT.ID%TYPE,
    vSTART IN VET_SHIFT."START"%TYPE,
    vEND IN VET_SHIFT."END"%TYPE,
    vNAME IN VET_SHIFT."NAME"%TYPE)
IS
BEGIN
    UPDATE VET_SHIFT SET "START"=vSTART, "END"=vEND, "NAME"=vNAME WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_SHIFT(
    vID IN VET_SHIFT.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_SHIFT WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_OWNER_CELLPHONE
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_OWNER_CELLPHONE(
	vCELLPHONE IN VET_OWNER_CELLPHONE."CELLPHONE"%TYPE,
    vOWNER_ID IN VET_OWNER_CELLPHONE."OWNER_ID"%TYPE)
IS
BEGIN
  INSERT INTO VET_OWNER_CELLPHONE ("CELLPHONE", "OWNER_ID")
  VALUES (vCELLPHONE, vOWNER_ID);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_OWNER_CELLPHONE(
    vCELLPHONE IN VET_OWNER_CELLPHONE."CELLPHONE"%TYPE,
    vOWNER_ID IN VET_OWNER_CELLPHONE."OWNER_ID"%TYPE)
IS
BEGIN
    UPDATE VET_OWNER_CELLPHONE SET "CELLPHONE"=vCELLPHONE WHERE "CELLPHONE"=vCELLPHONE AND OWNER_ID=vOWNER_ID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_OWNER_CELLPHONE(
    vCELLPHONE IN VET_OWNER_CELLPHONE."CELLPHONE"%TYPE,
    vOWNER_ID IN VET_OWNER_CELLPHONE."OWNER_ID"%TYPE)
IS 
BEGIN 
    DELETE VET_OWNER_CELLPHONE WHERE "CELLPHONE"=vCELLPHONE AND OWNER_ID=vOWNER_ID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_MEDIC_CELLPHONE
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_MEDIC_CELLPHONE(
	vCELLPHONE IN VET_MEDIC_CELLPHONE."CELLPHONE"%TYPE,
    vMEDIC_ID IN VET_MEDIC_CELLPHONE.MEDIC_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_MEDIC_CELLPHONE ("CELLPHONE", "MEDIC_ID")
  VALUES (vCELLPHONE, vMEDIC_ID);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_MEDIC_CELLPHONE(
    vCELLPHONE IN VET_MEDIC_CELLPHONE."CELLPHONE"%TYPE,
    vMEDIC_ID IN VET_MEDIC_CELLPHONE."MEDIC_ID"%TYPE)
IS
BEGIN
    UPDATE VET_MEDIC_CELLPHONE SET "CELLPHONE"=vCELLPHONE WHERE "CELLPHONE"=vCELLPHONE AND MEDIC_ID=vMEDIC_ID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_MEDIC_CELLPHONE(
    vCELLPHONE IN VET_MEDIC_CELLPHONE."CELLPHONE"%TYPE,
    vMEDIC_ID IN VET_MEDIC_CELLPHONE."MEDIC_ID"%TYPE)
IS 
BEGIN 
    DELETE VET_MEDIC_CELLPHONE WHERE "CELLPHONE"=vCELLPHONE AND MEDIC_ID=vMEDIC_ID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_PATIENT
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_PATIENT(
    vID  IN VET_PATIENT.ID%TYPE,
    vNAME  IN VET_PATIENT.NAME%TYPE,
    vPHOTO IN VET_PATIENT.PHOTO%TYPE,
    vDATE_FIRST_ATTENDED IN VET_PATIENT.DATE_FIRST_ATTENDED%TYPE,
    vBREED_ID  IN VET_PATIENT.BREED_ID%TYPE,
    vOWNER_ID  IN VET_PATIENT.OWNER_ID%TYPE,
    vPRIMARY_CARE_DOCTOR_ID  IN VET_PATIENT.PRIMARY_CARE_DOCTOR_ID%TYPE,
    vSPECIES_ID  IN VET_PATIENT.SPECIES_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_PATIENT ("NAME", "PHOTO", "DATE_FIRST_ATTENDED", "BREED_ID" , "OWNER_ID", "PRIMARY_CARE_DOCTOR_ID", "SPECIES_ID")
  VALUES (vNAME, vPHOTO, vDATE_FIRST_ATTENDED, vBREED_ID , vOWNER_ID, vPRIMARY_CARE_DOCTOR_ID, vSPECIES_ID);
  COMMIT;
END;


CREATE OR REPLACE PROCEDURE UPDATE_PATIENT(
    vID  IN VET_PATIENT.ID%TYPE,
    vNAME  IN VET_PATIENT.NAME%TYPE,
    vPHOTO IN VET_PATIENT.PHOTO%TYPE,
    vDATE_FIRST_ATTENDED IN VET_PATIENT.DATE_FIRST_ATTENDED%TYPE,
    vBREED_ID  IN VET_PATIENT.BREED_ID%TYPE,
    vOWNER_ID  IN VET_PATIENT.OWNER_ID%TYPE,
    vPRIMARY_CARE_DOCTOR_ID  IN VET_PATIENT.PRIMARY_CARE_DOCTOR_ID%TYPE,
    vSPECIES_ID  IN VET_PATIENT.SPECIES_ID%TYPE)
IS
BEGIN
    UPDATE VET_PATIENT SET 
        "NAME"=vNAME,
        PHOTO=vPHOTO,
        DATE_FIRST_ATTENDED=vDATE_FIRST_ATTENDED,
        BREED_ID=vBREED_ID,
        OWNER_ID=vOWNER_ID,
        PRIMARY_CARE_DOCTOR_ID=vPRIMARY_CARE_DOCTOR_ID,
        SPECIES_ID=vSPECIES_ID    
    WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_PATIENT(
    vID IN VET_PATIENT.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_PATIENT WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_APPOINTMENT
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_APPOINTMENT(
    vDATE  IN VET_APPOINTMENT."DATE"%TYPE,
    vDESCRIPTION IN VET_APPOINTMENT.DESCRIPTION%TYPE,
    vBOOKED IN VET_APPOINTMENT.BOOKED%TYPE,
    vMEDIC_ID  IN VET_APPOINTMENT.MEDIC_ID%TYPE,
    vPATIENT_ID  IN VET_APPOINTMENT.PATIENT_ID%TYPE,
    vSURGERY_ID  IN VET_APPOINTMENT.SURGERY_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_APPOINTMENT ("DATE", "DESCRIPTION", "BOOKED", "MEDIC_ID" , "PATIENT_ID", "SURGERY_ID")
  VALUES (vDATE, vDESCRIPTION, vBOOKED, vMEDIC_ID , vPATIENT_ID, vSURGERY_ID);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_APPOINTMENT(
    vID  IN VET_APPOINTMENT.ID%TYPE,
    vDATE  IN VET_APPOINTMENT."DATE"%TYPE,
    vDESCRIPTION IN VET_APPOINTMENT.DESCRIPTION%TYPE,
    vBOOKED IN VET_APPOINTMENT.BOOKED%TYPE,
    vMEDIC_ID  IN VET_APPOINTMENT.MEDIC_ID%TYPE,
    vPATIENT_ID  IN VET_APPOINTMENT.PATIENT_ID%TYPE,
    vSURGERY_ID  IN VET_APPOINTMENT.SURGERY_ID%TYPE)
IS
BEGIN
    UPDATE VET_APPOINTMENT SET 
        "DATE"=vDATE,
        DESCRIPTION=vDESCRIPTION,
        BOOKED=vBOOKED,
        MEDIC_ID=vMEDIC_ID,
        PATIENT_ID=vPATIENT_ID,
        SURGERY_ID=vSURGERY_ID   
     WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_APPOINTMENT(
    vID IN VET_APPOINTMENT.ID%TYPE
    )
IS 
BEGIN 
    DELETE VET_APPOINTMENT WHERE ID = vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_DISEASE
--------------------------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_DISEASE(
    NAME IN VET_DISEASE."NAME"%TYPE)
IS
BEGIN
  INSERT INTO VET_DISEASE ("CELLPHONE", "OWNER_ID")
  VALUES (vCELLPHONE, NAME);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_DISEASE(
    vID IN VET_DISEASE."ID"%TYPE,
    vNAME IN VET_DISEASE."NAME"%TYPE)
IS
BEGIN
    UPDATE VET_DISEASE SET "NAME"=vNAME WHERE ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_DISEASE(
    vID IN VET_DISEASE."ID"%TYPE)
IS 
BEGIN 
    DELETE VET_DISEASE WHERE ID=vID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_DISEASES
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_DISEASES(
    vBREED_ID  IN VET_DISEASES."BREED_ID"%TYPE,
    vDISEASE_ID IN VET_DISEASES.DISEASE_ID%TYPE,
    vMEDICATION_ID IN VET_DISEASES.MEDICATION_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_DISEASES ("BREED_ID", "DISEASE_ID", "MEDICATION_ID")
  VALUES (vBREED_ID, vDISEASE_ID, vMEDICATION_ID);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_DISEASES(
    vBREED_ID  IN VET_DISEASES."BREED_ID"%TYPE,
    vDISEASE_ID IN VET_DISEASES.DISEASE_ID%TYPE,
    vMEDICATION_ID IN VET_DISEASES.MEDICATION_ID%TYPE)
IS
BEGIN
    UPDATE VET_DISEASES SET 
        "BREED_ID"=vBREED_ID,
        DISEASE_ID=vDISEASE_ID,
        MEDICATION_ID=vMEDICATION_ID 
     WHERE 
        "BREED_ID"=vBREED_ID AND
        DISEASE_ID=vDISEASE_ID AND
        MEDICATION_ID=vMEDICATION_ID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_DISEASES(
    vBREED_ID  IN VET_DISEASES."BREED_ID"%TYPE,
    vDISEASE_ID IN VET_DISEASES.DISEASE_ID%TYPE,
    vMEDICATION_ID IN VET_DISEASES.MEDICATION_ID%TYPE)
IS 
BEGIN 
    DELETE VET_DISEASES WHERE 
        "BREED_ID"=vBREED_ID AND
        DISEASE_ID=vDISEASE_ID AND
        MEDICATION_ID=vMEDICATION_ID;
    COMMIT;
END;

--------------------------------------------------------
--  Stored Procedures for Table VET_WORKINGSHIFT
--------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_WORKINGSHIFT(
    vDATE  IN VET_WORKINGSHIFT."DATE"%TYPE,
    vMEDIC_ID IN VET_WORKINGSHIFT.MEDIC_ID%TYPE,
    vSHIFT_ID IN VET_WORKINGSHIFT.SHIFT_ID%TYPE)
IS
BEGIN
  INSERT INTO VET_WORKINGSHIFT ("DATE", "MEDIC_ID", "SHIFT_ID")
  VALUES (vDATE, vMEDIC_ID, vSHIFT_ID);
  COMMIT;
END;

CREATE OR REPLACE PROCEDURE UPDATE_WORKINGSHIFT(
    vID  IN VET_APPOINTMENT.ID%TYPE,
    vDATE  IN VET_WORKINGSHIFT."DATE"%TYPE,
    vMEDIC_ID IN VET_WORKINGSHIFT.MEDIC_ID%TYPE,
    vSHIFT_ID IN VET_WORKINGSHIFT.SHIFT_ID%TYPE)
IS
BEGIN
    UPDATE VET_WORKINGSHIFT SET 
        "DATE"=vDATE,
        MEDIC_ID=vMEDIC_ID,
        SHIFT_ID=vSHIFT_ID 
     WHERE 
        ID=vID;
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE DELETE_WORKINGSHIFT(
    vID  IN VET_APPOINTMENT.ID%TYPE)
IS 
BEGIN 
    DELETE VET_WORKINGSHIFT WHERE 
        ID=vID;
    COMMIT;
END;

--------------------------------------------------------
--  Trigger for Table VET_OWNER
--------------------------------------------------------
CREATE OR REPLACE TRIGGER OWNER_TRIGGER
BEFORE INSERT OR UPDATE OR DELETE 
ON "VET_OWNER"
FOR EACH ROW 
DECLARE
    v_OP CHAR(1);
BEGIN
    IF (INSERTING) THEN
        v_OP := 'I';
    ELSIF (UPDATING) THEN
        v_OP := 'U';
    ELSE
        v_OP := 'D';
    END IF;
        INSERT INTO VET_AUDIT ("DATE","TABLE","OP","USER") VALUES (sysdate,'VET_OWNER',v_OP,user);
END;

--------------------------------------------------------
--  Trigger for Table VET_MEDIC
--------------------------------------------------------
CREATE OR REPLACE TRIGGER MEDIC_TRIGGER
BEFORE INSERT OR UPDATE OR DELETE 
ON "VET_MEDIC"
FOR EACH ROW 
DECLARE
    v_OP CHAR(1);
BEGIN
    IF (INSERTING) THEN
        v_OP := 'I';
    ELSIF (UPDATING) THEN
        v_OP := 'U';
    ELSE
        v_OP := 'D';
    END IF;
        INSERT INTO VET_AUDIT ("DATE","TABLE","OP","USER") VALUES (sysdate,'VET_MEDIC',v_OP,user);
END;

--------------------------------------------------------
--  Trigger for Table VET_PATIENT
--------------------------------------------------------
CREATE OR REPLACE TRIGGER PATIENT_TRIGGER
BEFORE INSERT OR UPDATE OR DELETE 
ON "VET_PATIENT"
FOR EACH ROW 
DECLARE
    v_OP CHAR(1);
BEGIN
    IF (INSERTING) THEN
        v_OP := 'I';
    ELSIF (UPDATING) THEN
        v_OP := 'U';
    ELSE
        v_OP := 'D';
    END IF;
        INSERT INTO VET_AUDIT ("DATE","TABLE","OP","USER") VALUES (sysdate,'VET_PATIENT',v_OP,user);
END;

--------------------------------------------------------
--  Trigger for Table VET_APPOINTMENT
--------------------------------------------------------
CREATE OR REPLACE TRIGGER APPOINTMENT_TRIGGER
BEFORE INSERT OR UPDATE OR DELETE 
ON "VET_APPOINTMENT"
FOR EACH ROW 
DECLARE
    v_OP CHAR(1);
BEGIN
    IF (INSERTING) THEN
        v_OP := 'I';
    ELSIF (UPDATING) THEN
        v_OP := 'U';
    ELSE
        v_OP := 'D';
    END IF;
        INSERT INTO VET_AUDIT ("DATE","TABLE","OP","USER") VALUES (sysdate,'VET_APPOINTMENT',v_OP,user);
END;
--------------------------------------------------------
--  Job
--------------------------------------------------------

BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'SYSTEM_JOB',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'OPS.SALES_PKG.UPDATE_SALES_SUMMARY',
   start_date         =>  '00.00.00 AM Honduras/Tegucigalpa',
   repeat_interval    =>  'FREQ=DAILY',
   comments           =>  'SYSTEM JOB');
END;

